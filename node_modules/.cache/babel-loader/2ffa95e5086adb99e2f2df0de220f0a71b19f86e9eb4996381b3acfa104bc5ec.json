{"ast":null,"code":"var _jsxFileName = \"/home/ismail/React/todo list/todo/src/Todo-app/FilterTask.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterTask = props => {\n  const {\n    filter,\n    setFilter\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"txt\",\n      children: \"Filter Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"pending\",\n        name: \"pending\",\n        value: filter.pending,\n        onChange: () => setFilter({\n          ...filter,\n          pending: !filter.pending\n        }),\n        defaultChecked: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"pending\",\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"inProgress\",\n        name: \"inProgress\",\n        value: filter.inProgress,\n        onChange: () => setFilter({\n          ...filter,\n          inProgress: !filter.inProgress\n        }),\n        defaultChecked: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inProgress\",\n        children: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"done\",\n        name: \"done\",\n        value: filter.done,\n        onChange: () => setFilter({\n          ...filter,\n          done: !filter.done\n        }),\n        defaultChecked: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"done\",\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = FilterTask;\nexport default FilterTask;\nvar _c;\n$RefreshReg$(_c, \"FilterTask\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FilterTask","props","filter","setFilter","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","value","pending","onChange","defaultChecked","htmlFor","inProgress","done","_c","$RefreshReg$"],"sources":["/home/ismail/React/todo list/todo/src/Todo-app/FilterTask.js"],"sourcesContent":["import React from \"react\";\n\nconst FilterTask = (props) => {\n  const { filter, setFilter } = props;\n\n  return (\n    <div>\n      <p className=\"txt\">Filter Tasks</p>\n      <div className=\"box\">\n        <input\n          type=\"checkbox\"\n          id=\"pending\"\n          name=\"pending\"\n          value={filter.pending}\n          onChange={() => setFilter({ ...filter, pending: !filter.pending })}\n          defaultChecked\n        />\n        <label htmlFor=\"pending\">Pending</label>\n        <input\n          type=\"checkbox\"\n          id=\"inProgress\"\n          name=\"inProgress\"\n          value={filter.inProgress}\n          onChange={() =>\n            setFilter({ ...filter, inProgress: !filter.inProgress })\n          }\n          defaultChecked\n        />\n        <label htmlFor=\"inProgress\">In Progress</label>\n        <input\n          type=\"checkbox\"\n          id=\"done\"\n          name=\"done\"\n          value={filter.done}\n          onChange={() => setFilter({ ...filter, done: !filter.done })}\n          defaultChecked\n        />\n        <label htmlFor=\"done\">Done</label>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterTask;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B,MAAM;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAGF,KAAK;EAEnC,oBACEF,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAGM,SAAS,EAAC,KAAK;MAAAD,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACnCV,OAAA;MAAKM,SAAS,EAAC,KAAK;MAAAD,QAAA,gBAClBL,OAAA;QACEW,IAAI,EAAC,UAAU;QACfC,EAAE,EAAC,SAAS;QACZC,IAAI,EAAC,SAAS;QACdC,KAAK,EAAEX,MAAM,CAACY,OAAQ;QACtBC,QAAQ,EAAEA,CAAA,KAAMZ,SAAS,CAAC;UAAE,GAAGD,MAAM;UAAEY,OAAO,EAAE,CAACZ,MAAM,CAACY;QAAQ,CAAC,CAAE;QACnEE,cAAc;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACd,eACFV,OAAA;QAAOkB,OAAO,EAAC,SAAS;QAAAb,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACxCV,OAAA;QACEW,IAAI,EAAC,UAAU;QACfC,EAAE,EAAC,YAAY;QACfC,IAAI,EAAC,YAAY;QACjBC,KAAK,EAAEX,MAAM,CAACgB,UAAW;QACzBH,QAAQ,EAAEA,CAAA,KACRZ,SAAS,CAAC;UAAE,GAAGD,MAAM;UAAEgB,UAAU,EAAE,CAAChB,MAAM,CAACgB;QAAW,CAAC,CACxD;QACDF,cAAc;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACd,eACFV,OAAA;QAAOkB,OAAO,EAAC,YAAY;QAAAb,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC/CV,OAAA;QACEW,IAAI,EAAC,UAAU;QACfC,EAAE,EAAC,MAAM;QACTC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEX,MAAM,CAACiB,IAAK;QACnBJ,QAAQ,EAAEA,CAAA,KAAMZ,SAAS,CAAC;UAAE,GAAGD,MAAM;UAAEiB,IAAI,EAAE,CAACjB,MAAM,CAACiB;QAAK,CAAC,CAAE;QAC7DH,cAAc;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACd,eACFV,OAAA;QAAOkB,OAAO,EAAC,MAAM;QAAAb,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC9B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACW,EAAA,GAvCIpB,UAAU;AAyChB,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}