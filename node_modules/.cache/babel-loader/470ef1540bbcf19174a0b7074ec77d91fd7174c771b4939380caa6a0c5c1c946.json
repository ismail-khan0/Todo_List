{"ast":null,"code":"var promises = require(\"../promises\");\nvar sax = require(\"sax\");\nvar _ = require(\"underscore\");\nvar nodes = require(\"./nodes\");\nvar Element = nodes.Element;\nexports.readString = readString;\nfunction readString(xmlString, namespaceMap) {\n  namespaceMap = namespaceMap || {};\n  var finished = false;\n  var parser = sax.parser(true, {\n    xmlns: true,\n    position: false\n  });\n  var rootElement = {\n    children: []\n  };\n  var currentElement = rootElement;\n  var stack = [];\n  var deferred = promises.defer();\n  parser.onopentag = function (node) {\n    var attributes = mapObject(node.attributes, function (attribute) {\n      return attribute.value;\n    }, mapName);\n    var element = new Element(mapName(node), attributes);\n    currentElement.children.push(element);\n    stack.push(currentElement);\n    currentElement = element;\n  };\n  function mapName(node) {\n    if (node.uri) {\n      var mappedPrefix = namespaceMap[node.uri];\n      var prefix;\n      if (mappedPrefix) {\n        prefix = mappedPrefix + \":\";\n      } else {\n        prefix = \"{\" + node.uri + \"}\";\n      }\n      return prefix + node.local;\n    } else {\n      return node.local;\n    }\n  }\n  parser.onclosetag = function (node) {\n    currentElement = stack.pop();\n  };\n  parser.ontext = function (text) {\n    if (currentElement !== rootElement) {\n      currentElement.children.push(nodes.text(text));\n    }\n  };\n  parser.onend = function () {\n    if (!finished) {\n      finished = true;\n      deferred.resolve(rootElement.children[0]);\n    }\n  };\n  parser.onerror = function (error) {\n    if (!finished) {\n      finished = true;\n      deferred.reject(error);\n    }\n  };\n  parser.write(xmlString).close();\n  return deferred.promise;\n}\nfunction mapObject(input, valueFunc, keyFunc) {\n  return _.reduce(input, function (result, value, key) {\n    var mappedKey = keyFunc(value, key, input);\n    result[mappedKey] = valueFunc(value, key, input);\n    return result;\n  }, {});\n}","map":{"version":3,"names":["promises","require","sax","_","nodes","Element","exports","readString","xmlString","namespaceMap","finished","parser","xmlns","position","rootElement","children","currentElement","stack","deferred","defer","onopentag","node","attributes","mapObject","attribute","value","mapName","element","push","uri","mappedPrefix","prefix","local","onclosetag","pop","ontext","text","onend","resolve","onerror","error","reject","write","close","promise","input","valueFunc","keyFunc","reduce","result","key","mappedKey"],"sources":["/home/ismail/React/node_modules/mammoth/lib/xml/reader.js"],"sourcesContent":["var promises = require(\"../promises\");\nvar sax = require(\"sax\");\nvar _ = require(\"underscore\");\n\nvar nodes = require(\"./nodes\");\nvar Element = nodes.Element;\n\nexports.readString = readString;\n\nfunction readString(xmlString, namespaceMap) {\n    namespaceMap = namespaceMap || {};\n    \n    var finished = false;\n    var parser = sax.parser(true, {xmlns: true, position: false});\n    \n    var rootElement = {children: []};\n    var currentElement = rootElement;\n    var stack = [];\n    \n    var deferred = promises.defer();\n    \n    parser.onopentag = function(node) {\n        var attributes = mapObject(node.attributes, function(attribute) {\n            return attribute.value;\n        }, mapName);\n        \n        var element = new Element(mapName(node), attributes);\n        currentElement.children.push(element);\n        stack.push(currentElement);\n        currentElement = element;\n    };\n    \n    function mapName(node) {\n        if (node.uri) {\n            var mappedPrefix = namespaceMap[node.uri];\n            var prefix;\n            if (mappedPrefix) {\n                prefix = mappedPrefix + \":\";\n            } else {\n                prefix = \"{\" + node.uri + \"}\";\n            }\n            return prefix + node.local;\n        } else {\n            return node.local;\n        }\n    }\n    \n    parser.onclosetag = function(node) {\n        currentElement = stack.pop();\n    };\n    \n    parser.ontext = function(text) {\n        if (currentElement !== rootElement) {\n            currentElement.children.push(nodes.text(text));\n        }\n    };\n    \n    parser.onend = function() {\n        if (!finished) {\n            finished = true;\n            deferred.resolve(rootElement.children[0]);\n        }\n    };\n    \n    parser.onerror = function(error) {\n        if (!finished) {\n            finished = true;\n            deferred.reject(error);\n        }\n    };\n    \n    parser.write(xmlString).close();\n    \n    return deferred.promise;\n}\n\nfunction mapObject(input, valueFunc, keyFunc) {\n    return _.reduce(input, function(result, value, key) {\n        var mappedKey = keyFunc(value, key, input);\n        result[mappedKey] = valueFunc(value, key, input);\n        return result;\n    }, {});\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}